<project name="CommunityModules" default="test" basedir=".">

	<property name="src" location="modules/"/>
	<property name="src-test" location="tests/java"/>
	<property name="build" location="build"/>
	<property name="dist" location="dist"/>
	<property name="lib" location="lib"/>
	<property name="tests" location="tests"/>
	<property name="tlc" location="tlc"/>

	<tstamp>
		<format property="timestamp"
          pattern="yyyyMMdHHmm"
          locale="en,UK"/>
	</tstamp>

	<target name="init" description="Create the build and dist directory structure">
		<mkdir dir="${build}/modules"/>
		<mkdir dir="${build}/tests"/>
		<mkdir dir="${dist}"/>
		<mkdir dir="${tlc}"/>
	</target>

	<target name="download" depends="init" description="downloads tla2tools.jar" unless="skip.download">
		<!--<get src="https://github.com/tlaplus/tlaplus/releases/download/v1.7.0/tla2tools.jar" dest="${tlc}"/>-->
		<get src="https://nightly.tlapl.us/dist/tla2tools.jar" dest="${tlc}"/>
	</target>

	<target name="compile" depends="download" description="compile the java module overwrites">
		<javac srcdir="${src}" destdir="${build}/modules" classpath="${tlc}/tla2tools.jar:${lib}/jackson-core-2.10.2.jar:${lib}/jackson-databind-2.10.2.jar:${lib}/jackson-annotations-2.10.2.jar:${lib}/gson-2.8.6.jar"
           source="1.8"
           target="1.8"
           includeantruntime="false"/>
		<javac srcdir="${src-test}" destdir="${build}/tests" classpath="${tlc}/tla2tools.jar:${lib}/junit-4.13.jar"
           source="1.8"
           target="1.8"
           includeantruntime="false"/>
	</target>

	<target name="dist" depends="compile" description="Combine the module overwrites and the TLA+ definitions into a distribution">
		<tstamp/>
		<jar jarfile="${dist}/CommunityModules-${timestamp}.jar">
			<fileset dir="${build}/modules/"
             includes="**/*.class"/>
			<fileset dir="${src}/"
             includes="*.tla,*.java"/>
			<fileset dir="."
             includes="LICENSE,README.md"/>
		</jar>


		<!-- Extract gson xml into class directory to be packaged into CommunityModules-deps.jar. -->
		<unzip src="lib/jackson-databind-2.10.2.jar" dest="${build}/deps">
			<patternset>
			    <include name="**/*.class"/>
			</patternset>
		</unzip>
		<unzip src="lib/jackson-annotations-2.10.2.jar" dest="${build}/deps">
			<patternset>
		        <include name="**/*.class"/>
			</patternset>
		</unzip>
		<unzip src="lib/jackson-core-2.10.2.jar" dest="${build}/deps">
			<patternset>
		        <include name="**/*.class"/>
			</patternset>
		</unzip>
                <unzip src="lib/gson-2.8.6.jar" dest="${build}/deps">
			<patternset>
		        <include name="**/*.class"/>
			</patternset>
		</unzip>
		<jar jarfile="${dist}/CommunityModules-deps-${timestamp}.jar">
			<fileset dir="${build}/modules/"
             includes="**/*.class"/>
			<fileset dir="${build}/deps"
             includes="**/*.class"/>
			<fileset dir="${lib}"
             includes="**/NOTICE*"/>
			<fileset dir="${lib}"
             includes="**/LICENSE*"/>
			<fileset dir="${src}/"
             includes="*.tla,*.java"/>
			<fileset dir="."
             includes="LICENSE,README.md"/>
		</jar>

	</target>

	<target name="test" depends="dist" description="Run the modules in tests/ on the TLA+ modules in dist/">
		<!-- If an assert fails, TLC will return a non-zero exit value which is makes the ant target fail. -->
		<java classname="tlc2.TLC" fork="true" failonerror="true">
			<!-- Tell Java to use a garbage collector which makes TLC happy. -->
			<jvmarg value="-XX:+UseParallelGC"/>
			
			<!-- Report execution statistics as azure-pipelien -->
			<sysproperty key="tlc2.TLC.ide" value="azure-pipeline"/>
			<sysproperty key="util.ExecutionStatisticsCollector.id" value="01ed03e40ba44f278a934849dd2b1038"/>
			
			<arg value="-metadir"/>
			<arg value="${basedir}/build/states"/>
			<arg value="-cleanup"/>
			<arg value="${basedir}/tests/AllTests"/>

			<classpath>
				<pathelement location="${tlc}/tla2tools.jar" />
				<pathelement location="${lib}/jackson-core-2.10.2.jar" />
				<pathelement location="${lib}/jackson-databind-2.10.2.jar" />
				<pathelement location="${lib}/jackson-annotations-2.10.2.jar" />
                                <pathelement location="${lib}/gson-2.8.6.jar" />
				<!-- The jar that has just been built by the dist target. -->
				<pathelement location="${dist}/CommunityModules-${timestamp}.jar" />
			</classpath>
		</java>

		<!-- If an assert fails, TLC will return a non-zero exit value which is makes the ant target fail. -->
		<java classname="tlc2.TLC" fork="true" failonerror="true">
			<!-- Tell Java to use a garbage collector which makes TLC happy. -->
			<jvmarg value="-XX:+UseParallelGC"/>

			<!-- Report execution statistics as azure-pipeline -->
			<sysproperty key="tlc2.TLC.ide" value="azure-pipeline"/>
			<sysproperty key="util.ExecutionStatisticsCollector.id" value="01ed03e40ba44f278a934849dd2b1038"/>

			<arg value="-metadir"/>
			<arg value="${basedir}/build/states"/>
			<arg value="-cleanup"/>
			<arg value="-deadlock"/>
			<arg value="${basedir}/tests/GH005/TLCExtTrace"/>

			<classpath>
				<pathelement location="${tlc}/tla2tools.jar" />
				<!-- The jar that has just been built by the dist target. -->
				<pathelement location="${dist}/CommunityModules-${timestamp}.jar" />
			</classpath>
		</java>

		<junit dir="${build}" printsummary="yes" haltonfailure="yes" showoutput="no" haltonerror="yes"  forkmode="perTest" fork="yes">
			<!-- enable all assertions -->
			<jvmarg value="-ea"/>
			<jvmarg value="-XX:MaxDirectMemorySize=512k"/>
			<jvmarg value="-XX:+UseParallelGC"/>
			<!-- Uncomment to open a debug port in each forked VM to remote attach your Eclipse at port 1044.
            <jvmarg value="-Xdebug" />
	        <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
			-->
			<classpath>
				<pathelement path="${build}/tests/" />
				<pathelement location="${tlc}/tla2tools.jar" />
				<pathelement location="${lib}/hamcrest-core-1.3.jar" />
				<pathelement location="${lib}/junit-4.13.jar" />
				<pathelement location="${lib}/jackson-core-2.10.2.jar" />
				<pathelement location="${lib}/jackson-databind-2.10.2.jar" />
				<pathelement location="${lib}/jackson-annotations-2.10.2.jar" />
                                <pathelement location="${lib}/gson-2.8.6.jar" />
				<!-- The jar that has just been built by the dist target. -->
				<pathelement location="${dist}/CommunityModules-${timestamp}.jar" />
			</classpath>
			<formatter type="xml" />

			<!-- Pass the base path of the tlatools project to unit tests in case they need it to locate TLA+ specs or configs -->
			<sysproperty key="basepath" value="${basedir}/tests"/>
			<sysproperty key="tlc2.tool.fp.FPSet.impl" value="tlc2.tool.fp.OffHeapDiskFPSet"/>
			<sysproperty key="util.FileUtil.milliseconds" value="true"/>
			<sysproperty key="tlc2.tool.distributed.TLCWorker.threadCount" value="4"/>
			<!-- The tests below can be tricked into running in a single VM by fiddling with the classloader 
			     to reload and thus initialize all classes for each tests. -->
			<batchtest fork="yes" todir="${build}/tests">
				<fileset dir="${src-test}">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="clean" description="Delete the ${build}, ${tlc} and ${dist} directory trees">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
		<delete dir="${tlc}"/>
	</target>
</project>
